#include <klocale.h>
/****************************************************************************
** Form implementation generated from reading ui file '/home/ag/projects/qaudioplayer/src/qaudiodg.ui'
**
** Created: Fri Sep 1 23:43:08 2006
**      by: The User Interface Compiler ($Id: qt/main.cpp   3.3.5   edited Aug 31 12:13 $)
**
** WARNING! All changes made in this file will be lost!
****************************************************************************/

#include "qaudiodg.h"

#include <qvariant.h>
#include <qpushbutton.h>
#include <qcheckbox.h>
#include <qspinbox.h>
#include <qlabel.h>
#include <qframe.h>
#include <qslider.h>
#include <qlayout.h>
#include <qtooltip.h>
#include <qwhatsthis.h>
#include <qimage.h>
#include <qpixmap.h>

#include "/home/ag/projects/qaudioplayer/src/qaudiodg.ui.h"
static const unsigned char img0_qaudiodg[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10,
    0x08, 0x06, 0x00, 0x00, 0x00, 0x1f, 0xf3, 0xff, 0x61, 0x00, 0x00, 0x01,
    0x19, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0x9d, 0x93, 0x4d, 0x6e, 0xc2,
    0x30, 0x10, 0x85, 0x3f, 0x23, 0x2e, 0xd1, 0x5d, 0xc2, 0x31, 0xd8, 0xd5,
    0xd7, 0xe8, 0x55, 0x28, 0x92, 0x65, 0xba, 0xea, 0x21, 0x2a, 0x54, 0xd1,
    0x63, 0xb8, 0x52, 0xa4, 0xc9, 0x8e, 0x1e, 0x21, 0x8e, 0xb8, 0xc8, 0xeb,
    0x22, 0x10, 0x12, 0x4a, 0x4b, 0xe8, 0x6c, 0x3e, 0x8d, 0x6c, 0xcd, 0xcf,
    0xf3, 0x33, 0x3a, 0x08, 0x55, 0x42, 0x07, 0x61, 0x95, 0x71, 0x6f, 0x3e,
    0xaf, 0xdb, 0x9a, 0x65, 0xb1, 0xe4, 0xc4, 0xcd, 0xdb, 0x46, 0x1e, 0x4f,
    0x22, 0x01, 0xc0, 0x23, 0x6e, 0x78, 0x7e, 0xc9, 0x51, 0xe5, 0x18, 0xa2,
    0x46, 0xd1, 0x48, 0xb6, 0x35, 0xfd, 0x35, 0xc9, 0x7c, 0xd8, 0x79, 0xb5,
    0x5e, 0x91, 0x73, 0xa6, 0x2c, 0x17, 0xe4, 0xdc, 0x50, 0x96, 0x0b, 0x1e,
    0x68, 0xd8, 0xbd, 0xef, 0x94, 0x48, 0x5c, 0x9b, 0xac, 0xaf, 0x64, 0x5b,
    0x3b, 0xb6, 0x45, 0x6a, 0x2e, 0x78, 0x25, 0x00, 0x59, 0x65, 0xcc, 0xea,
    0xb6, 0x86, 0x02, 0x52, 0xdb, 0x55, 0xce, 0xb9, 0x81, 0xd2, 0x8d, 0x89,
    0x23, 0xe7, 0x3c, 0x22, 0x40, 0xfa, 0x4c, 0x72, 0xb6, 0x35, 0xa5, 0x36,
    0xe1, 0x0b, 0xcf, 0x14, 0xae, 0xd6, 0xcf, 0x90, 0x85, 0x5b, 0x38, 0x62,
    0x88, 0xfc, 0x14, 0xee, 0x46, 0x74, 0xf7, 0xe9, 0x56, 0x08, 0xa6, 0x99,
    0x2f, 0x3c, 0xe0, 0xf8, 0xfa, 0x70, 0x93, 0xe8, 0x0b, 0x0f, 0x59, 0xdd,
    0x0a, 0x24, 0xb0, 0xca, 0xb0, 0x60, 0x92, 0xd0, 0xeb, 0x0b, 0x92, 0xd0,
    0xfe, 0xc8, 0xdf, 0x72, 0x0b, 0x26, 0x40, 0x31, 0x44, 0xf5, 0xef, 0xbf,
    0xdf, 0x1d, 0x2f, 0x4f, 0x60, 0x0c, 0xf1, 0x5c, 0x60, 0x68, 0xa2, 0x5b,
    0x9d, 0x87, 0xf9, 0x49, 0x83, 0x0b, 0x1f, 0x4c, 0x9b, 0xe0, 0x24, 0x62,
    0x0c, 0x51, 0xbd, 0x13, 0x01, 0xe7, 0x1c, 0x9d, 0x3a, 0x4f, 0x9d, 0xd9,
    0x6e, 0x12, 0x70, 0x3a, 0xe8, 0xfc, 0x31, 0x5a, 0xa8, 0x73, 0x7d, 0x97,
    0x2f, 0x7a, 0x0d, 0xfe, 0xcb, 0x6f, 0x1d, 0x4c, 0x1b, 0x87, 0xf6, 0x05,
    0x76, 0x27, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42,
    0x60, 0x82
};

static const unsigned char img1_qaudiodg[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10,
    0x08, 0x06, 0x00, 0x00, 0x00, 0x1f, 0xf3, 0xff, 0x61, 0x00, 0x00, 0x00,
    0xa4, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0xad, 0xd0, 0xc1, 0x09, 0xc2,
    0x40, 0x14, 0x84, 0xe1, 0x2f, 0x62, 0x01, 0x62, 0x05, 0x1e, 0x4c, 0x03,
    0xe9, 0xc5, 0x5a, 0x2c, 0x45, 0xc4, 0x02, 0x3c, 0xa4, 0x04, 0x5b, 0x10,
    0xf1, 0xee, 0xc5, 0x0a, 0x42, 0x0a, 0x10, 0xe2, 0xc1, 0x05, 0x93, 0x65,
    0x49, 0x96, 0x90, 0xb9, 0x0c, 0x3c, 0x76, 0xde, 0xfc, 0xfb, 0x58, 0x44,
    0x67, 0x3c, 0x74, 0x73, 0xa2, 0x05, 0x21, 0xdc, 0x62, 0x83, 0x1d, 0xb6,
    0x61, 0x9e, 0xbd, 0xa0, 0xd1, 0xa9, 0x7b, 0xd3, 0x03, 0xde, 0xa8, 0xa6,
    0x17, 0xad, 0x08, 0x8f, 0xcb, 0x30, 0x29, 0x51, 0xa3, 0x0d, 0x64, 0xcd,
    0xf8, 0xd7, 0xd2, 0x04, 0xb1, 0x46, 0x88, 0xd2, 0x04, 0xb1, 0x8f, 0x10,
    0xe5, 0x11, 0xa4, 0x89, 0x0a, 0x55, 0x2e, 0x41, 0xec, 0x47, 0xdc, 0xe6,
    0x10, 0x3c, 0xf1, 0xc1, 0xe5, 0x7f, 0x8b, 0x3c, 0x82, 0xbb, 0xdf, 0x0d,
    0x4e, 0x8a, 0x7e, 0x78, 0x9a, 0x20, 0xd1, 0x18, 0x6b, 0x3d, 0x20, 0x78,
    0x05, 0xbf, 0x62, 0x1f, 0x1a, 0x27, 0x34, 0x24, 0xc8, 0x68, 0x4c, 0x13,
    0xd4, 0x0a, 0xad, 0x2e, 0xa7, 0x71, 0x71, 0x7d, 0x01, 0xfe, 0x47, 0x3b,
    0xb5, 0x3d, 0xc9, 0xd5, 0x30, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e,
    0x44, 0xae, 0x42, 0x60, 0x82
};

static const unsigned char img2_qaudiodg[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10,
    0x08, 0x06, 0x00, 0x00, 0x00, 0x1f, 0xf3, 0xff, 0x61, 0x00, 0x00, 0x00,
    0x72, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0xd5, 0x93, 0x61, 0x0a, 0x80,
    0x20, 0x0c, 0x46, 0x1f, 0xdd, 0xa0, 0x1b, 0x74, 0x5d, 0x8f, 0x10, 0x74,
    0xa5, 0x79, 0x04, 0x8f, 0xd0, 0x15, 0xd6, 0x0f, 0x05, 0x43, 0x2d, 0x8d,
    0x46, 0xd0, 0x40, 0x3e, 0xa6, 0x7e, 0xdb, 0x63, 0x28, 0x98, 0xc4, 0x0a,
    0xf8, 0x37, 0x05, 0x3c, 0x28, 0xa0, 0xa0, 0x23, 0x4b, 0x4e, 0xd6, 0x09,
    0x80, 0x05, 0xa2, 0x3f, 0x83, 0xdc, 0xe9, 0x9c, 0xee, 0x96, 0x04, 0x2a,
    0x75, 0xa7, 0x66, 0xbe, 0x55, 0x05, 0xf6, 0x8c, 0x2f, 0x03, 0x1a, 0xae,
    0x08, 0x7a, 0x9d, 0xd5, 0x94, 0xc0, 0x37, 0x08, 0x1e, 0xcd, 0xc0, 0xfd,
    0x7f, 0x06, 0xe6, 0xef, 0x40, 0x80, 0x90, 0x0e, 0x7b, 0x5a, 0xb8, 0x89,
    0x9f, 0xc9, 0x55, 0xbb, 0xdf, 0xc4, 0x01, 0xf2, 0x18, 0x0a, 0xc0, 0x13,
    0x16, 0x88, 0x20, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae,
    0x42, 0x60, 0x82
};

static const unsigned char img3_qaudiodg[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10,
    0x08, 0x06, 0x00, 0x00, 0x00, 0x1f, 0xf3, 0xff, 0x61, 0x00, 0x00, 0x00,
    0xab, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0xad, 0x92, 0xd1, 0x0d, 0xc3,
    0x20, 0x0c, 0x44, 0x9f, 0xba, 0x41, 0x37, 0xe8, 0xba, 0x1d, 0x21, 0x12,
    0x2b, 0xc1, 0x08, 0x19, 0x21, 0x2b, 0x5c, 0x3f, 0x02, 0x84, 0x60, 0x1b,
    0x55, 0x6a, 0x2d, 0x21, 0x22, 0xe0, 0x8e, 0xe7, 0x23, 0xf0, 0x97, 0xda,
    0x80, 0xf2, 0xdd, 0xd1, 0xec, 0xae, 0x16, 0x10, 0x20, 0x50, 0x1d, 0x04,
    0x43, 0x02, 0x8d, 0x26, 0x0f, 0x00, 0x5e, 0x50, 0xcf, 0x34, 0x10, 0x35,
    0xa0, 0x01, 0xac, 0xef, 0x3f, 0xeb, 0xf7, 0x8d, 0x60, 0x3f, 0x9d, 0x35,
    0x50, 0x28, 0xdb, 0x9b, 0x25, 0x50, 0x32, 0x06, 0xc7, 0xb9, 0x32, 0x9a,
    0x38, 0x66, 0x5d, 0xbc, 0x2f, 0x32, 0x88, 0x48, 0xba, 0x58, 0x40, 0x32,
    0x06, 0xc7, 0x65, 0x90, 0x03, 0x92, 0x26, 0xae, 0xfb, 0xd3, 0xab, 0x95,
    0x4b, 0xec, 0xf5, 0x3c, 0x67, 0x92, 0x00, 0xde, 0x01, 0xc1, 0x2c, 0x76,
    0x66, 0x56, 0x19, 0x78, 0x81, 0x19, 0x92, 0x28, 0x83, 0x55, 0xcf, 0x86,
    0xc4, 0x23, 0x70, 0xc5, 0xde, 0xeb, 0xb8, 0xff, 0x41, 0xbb, 0xa9, 0xbd,
    0x73, 0xaa, 0xbd, 0x4e, 0x73, 0x37, 0xbf, 0xd7, 0x36, 0xa7, 0x1a, 0x97,
    0x15, 0xff, 0x58, 0x1f, 0xf8, 0x09, 0xdf, 0xbb, 0x87, 0x96, 0x72, 0x82,
    0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
};


/*
 *  Constructs a QAudioDg as a child of 'parent', with the
 *  name 'name' and widget flags set to 'f'.
 */
QAudioDg::QAudioDg( QWidget* parent, const char* name, WFlags fl )
    : QWidget( parent, name, fl )
{
    QImage img;
    img.loadFromData( img0_qaudiodg, sizeof( img0_qaudiodg ), "PNG" );
    image0 = img;
    img.loadFromData( img1_qaudiodg, sizeof( img1_qaudiodg ), "PNG" );
    image1 = img;
    img.loadFromData( img2_qaudiodg, sizeof( img2_qaudiodg ), "PNG" );
    image2 = img;
    img.loadFromData( img3_qaudiodg, sizeof( img3_qaudiodg ), "PNG" );
    image3 = img;
    if ( !name )
	setName( "QAudioDg" );
    QAudioDgLayout = new QVBoxLayout( this, 11, 6, "QAudioDgLayout"); 

    layout4 = new QHBoxLayout( 0, 0, 6, "layout4"); 

    fft = new QCheckBox( this, "fft" );
    layout4->addWidget( fft );

    fmin = new QSpinBox( this, "fmin" );
    fmin->setMaxValue( 99999 );
    fmin->setLineStep( 100 );
    layout4->addWidget( fmin );

    fmax = new QSpinBox( this, "fmax" );
    fmax->setMaxValue( 99999 );
    fmax->setLineStep( 100 );
    fmax->setValue( 2500 );
    layout4->addWidget( fmax );

    textLabel2 = new QLabel( this, "textLabel2" );
    layout4->addWidget( textLabel2 );

    scale = new QSpinBox( this, "scale" );
    scale->setValue( 5 );
    layout4->addWidget( scale );
    spacer1 = new QSpacerItem( 16, 20, QSizePolicy::Expanding, QSizePolicy::Minimum );
    layout4->addItem( spacer1 );

    textLabel1 = new QLabel( this, "textLabel1" );
    layout4->addWidget( textLabel1 );

    speed = new QSpinBox( this, "speed" );
    speed->setMaxValue( 1000 );
    speed->setMinValue( 10 );
    speed->setValue( 100 );
    layout4->addWidget( speed );
    QAudioDgLayout->addLayout( layout4 );

    frame2 = new QFrame( this, "frame2" );
    frame2->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)5, (QSizePolicy::SizeType)5, 0, 1, frame2->sizePolicy().hasHeightForWidth() ) );
    frame2->setPaletteForegroundColor( QColor( 102, 104, 195 ) );
    frame2->setPaletteBackgroundColor( QColor( 255, 255, 255 ) );
    frame2->setFrameShape( QFrame::LineEditPanel );
    frame2->setFrameShadow( QFrame::Sunken );
    frame2Layout = new QGridLayout( frame2, 1, 1, 2, 6, "frame2Layout"); 

    frame = new QLabel( frame2, "frame" );
    frame->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)5, (QSizePolicy::SizeType)5, 0, 0, frame->sizePolicy().hasHeightForWidth() ) );

    frame2Layout->addWidget( frame, 0, 0 );
    QAudioDgLayout->addWidget( frame2 );

    slider = new QSlider( this, "slider" );
    slider->setMaxValue( 100000 );
    slider->setLineStep( 1000 );
    slider->setPageStep( 10000 );
    slider->setOrientation( QSlider::Horizontal );
    QAudioDgLayout->addWidget( slider );

    layout4_2 = new QHBoxLayout( 0, 0, 6, "layout4_2"); 

    pushButton1 = new QPushButton( this, "pushButton1" );
    pushButton1->setIconSet( QIconSet( image0 ) );
    layout4_2->addWidget( pushButton1 );

    pushButton2 = new QPushButton( this, "pushButton2" );
    pushButton2->setIconSet( QIconSet( image1 ) );
    layout4_2->addWidget( pushButton2 );

    pushButton3 = new QPushButton( this, "pushButton3" );
    pushButton3->setIconSet( QIconSet( image2 ) );
    layout4_2->addWidget( pushButton3 );

    volume = new QSlider( this, "volume" );
    volume->setMaxValue( 100 );
    volume->setValue( 100 );
    volume->setOrientation( QSlider::Horizontal );
    layout4_2->addWidget( volume );

    pushButton4 = new QPushButton( this, "pushButton4" );
    pushButton4->setIconSet( QIconSet( image3 ) );
    layout4_2->addWidget( pushButton4 );
    QAudioDgLayout->addLayout( layout4_2 );

    layout3 = new QHBoxLayout( 0, 0, 6, "layout3"); 

    status = new QLabel( this, "status" );
    status->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)7, (QSizePolicy::SizeType)5, 1, 0, status->sizePolicy().hasHeightForWidth() ) );
    layout3->addWidget( status );

    time = new QLabel( this, "time" );
    time->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)0, (QSizePolicy::SizeType)5, 0, 0, time->sizePolicy().hasHeightForWidth() ) );
    time->setMinimumSize( QSize( 60, 0 ) );
    time->setAlignment( int( QLabel::AlignVCenter | QLabel::AlignRight ) );
    layout3->addWidget( time );
    QAudioDgLayout->addLayout( layout3 );
    languageChange();
    resize( QSize(586, 365).expandedTo(minimumSizeHint()) );
    clearWState( WState_Polished );

    // signals and slots connections
    connect( pushButton1, SIGNAL( clicked() ), this, SLOT( opencb() ) );
    connect( pushButton2, SIGNAL( clicked() ), this, SLOT( playcb() ) );
    connect( pushButton3, SIGNAL( clicked() ), this, SLOT( stopcb() ) );
    connect( pushButton4, SIGNAL( clicked() ), this, SLOT( quitcb() ) );
    connect( slider, SIGNAL( valueChanged(int) ), this, SLOT( slidercb(int) ) );
    connect( fft, SIGNAL( toggled(bool) ), this, SLOT( fftcb(bool) ) );
    connect( fmin, SIGNAL( valueChanged(int) ), this, SLOT( fmincb(int) ) );
    connect( fmax, SIGNAL( valueChanged(int) ), this, SLOT( fmaxcb(int) ) );
    connect( scale, SIGNAL( valueChanged(int) ), this, SLOT( scalecb(int) ) );
    connect( volume, SIGNAL( valueChanged(int) ), this, SLOT( volumecb(int) ) );
    connect( speed, SIGNAL( valueChanged(int) ), this, SLOT( speedcb(int) ) );
}

/*
 *  Destroys the object and frees any allocated resources
 */
QAudioDg::~QAudioDg()
{
    // no need to delete child widgets, Qt does it all for us
}

/*
 *  Sets the strings of the subwidgets using the current
 *  language.
 */
void QAudioDg::languageChange()
{
    setCaption( tr2i18n( "QAudioPlayer" ) );
    fft->setText( tr2i18n( "FFT" ) );
    fmin->setSuffix( tr2i18n( "Hz" ) );
    fmax->setSuffix( tr2i18n( "Hz" ) );
    textLabel2->setText( tr2i18n( "Mag:" ) );
    scale->setPrefix( tr2i18n( "x" ) );
    textLabel1->setText( tr2i18n( "Speed:" ) );
    speed->setSuffix( tr2i18n( "%" ) );
    frame->setText( QString::null );
    pushButton1->setText( tr2i18n( "&Open" ) );
    pushButton1->setAccel( QKeySequence( tr2i18n( "Alt+O" ) ) );
    pushButton2->setText( tr2i18n( "&Play" ) );
    pushButton2->setAccel( QKeySequence( tr2i18n( "Alt+P" ) ) );
    pushButton3->setText( tr2i18n( "&Stop" ) );
    pushButton3->setAccel( QKeySequence( tr2i18n( "Alt+S" ) ) );
    pushButton4->setText( tr2i18n( "&Quit" ) );
    pushButton4->setAccel( QKeySequence( tr2i18n( "Alt+Q" ) ) );
    status->setText( tr2i18n( "Ready" ) );
    time->setText( tr2i18n( "  0:00" ) );
}

#include "qaudiodg.moc"
